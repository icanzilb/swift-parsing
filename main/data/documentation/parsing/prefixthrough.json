{"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"code":"Sequence.prefix(through:)","type":"codeVoice"},{"text":", and uses similar logic under the hood to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"consume and return input through a particular subsequence."}]},{"code":["let lineParser = PrefixThrough(\"\\n\")","","var input = \"Hello\\nworld\\n\"[...]","try line.parse(&input)  \/\/ \"Hello\\n\"","input                   \/\/ \"world\\n\""],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"kind":"symbol","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"symbolKind":"struct","role":"symbol","roleHeading":"Structure","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing13PrefixThroughV","title":"PrefixThrough","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-52m64","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-67yf7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-8iizp","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch"]},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"minor":2,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/parsing\/prefixthrough"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:by:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:by:)","url":"\/documentation\/parsing\/prefixthrough\/init(_:by:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(_:by:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-8iizp":{"type":"topic","title":"init(_:)","url":"\/documentation\/parsing\/prefixthrough\/init(_:)-8iizp","kind":"symbol","abstract":[],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Input.Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Equatable"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-8iizp","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/areEquivalent":{"type":"topic","title":"areEquivalent","url":"\/documentation\/parsing\/prefixthrough\/areequivalent","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/areEquivalent","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"areEquivalent","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"type":"topic","title":"PrefixThrough","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixthrough","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-52m64":{"type":"topic","title":"init(_:)","url":"\/documentation\/parsing\/prefixthrough\/init(_:)-52m64","kind":"symbol","abstract":[],"role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-52m64","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:SS8UTF8ViewV","kind":"typeIdentifier","text":"UTF8View"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/possibleMatch":{"type":"topic","title":"possibleMatch","url":"\/documentation\/parsing\/prefixthrough\/possiblematch","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/possibleMatch","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possibleMatch"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/init(_:)-67yf7":{"url":"\/documentation\/parsing\/prefixthrough\/init(_:)-67yf7","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/init(_:)-67yf7"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/parse(_:)":{"title":"parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"role":"symbol","url":"\/documentation\/parsing\/prefixthrough\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough/Parser-Implementations":{"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough\/Parser-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/prefixthrough\/parser-implementations","abstract":[],"type":"topic","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"}}}