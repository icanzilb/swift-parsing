{"abstract":[{"text":"No overview available.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/whitespace\/init()-3qdne"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]}],"metadata":{"extendedModule":"Parsing","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","symbolKind":"init","role":"symbol","roleHeading":"Initializer","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UTF8.CodeUnit>","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Bytes","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UTF8.CodeUnit>","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10WhitespaceVAAs10ArraySliceVys5UInt8VGRszAHRs_rlEACyA2HGycfc"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()-3qdne","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"url":"\/documentation\/parsing\/whitespace","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"title":"Whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init()-3qdne":{"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/parsing\/whitespace\/init()-3qdne","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UTF8.CodeUnit>"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Bytes"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UTF8.CodeUnit>"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","title":"init()","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()-3qdne"}}}