{"schemaVersion":{"minor":2,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-93ai6","interfaceLanguage":"swift"},"abstract":[{"text":"No overview available.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"paths":["\/documentation\/parsing\/newline\/init()-93ai6"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"sections":[],"metadata":{"externalID":"s:7Parsing7NewlineVAAs10ArraySliceVys5UInt8VGRszAHRs_rlEACyA2HGycfc","extendedModule":"Parsing","role":"symbol","roleHeading":"Initializer","modules":[{"name":"Parsing"}],"title":"init()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"ArraySlice<UTF8.CodeUnit>"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Bytes"},{"type":"text","text":" is "},{"code":"ArraySlice<UTF8.CodeUnit>","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"symbolKind":"init"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()-93ai6":{"title":"init()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()-93ai6","role":"symbol","url":"\/documentation\/parsing\/newline\/init()-93ai6","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"ArraySlice<UTF8.CodeUnit>","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Bytes","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ArraySlice<UTF8.CodeUnit>","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"title":"Newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/newline","abstract":[{"type":"text","text":"A parser that consumes a single newline from the beginning of the input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"}}}