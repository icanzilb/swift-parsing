{"abstract":[{"text":"No overview available.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"possiblePrefix","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}]}],"metadata":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init(_:)","modules":[{"name":"Parsing"}],"extendedModule":"Parsing","externalID":"s:7Parsing10PrefixUpToVAASsRszrlEyACySsGSScfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init"},"schemaVersion":{"minor":2,"major":0,"patch":0},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefixupto\/init(_:)-7b2he"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","role":"symbol","type":"topic","url":"\/documentation\/parsing\/prefixupto","title":"PrefixUpTo","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo/init(_:)-7b2he":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo\/init(_:)-7b2he","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","url":"\/documentation\/parsing\/prefixupto\/init(_:)-7b2he","title":"init(_:)","abstract":[]}}}