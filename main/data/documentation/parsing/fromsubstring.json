{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromsubstring"]}],"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"role":"symbol","externalID":"s:7Parsing13FromSubstringV","navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"roleHeading":"Structure","modules":[{"name":"Parsing"}],"symbolKind":"struct","title":"FromSubstring"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"SubstringParser","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"FromSubstring","type":"codeVoice"},{"type":"text","text":" operator allows you to mix and match representation levels of strings"},{"type":"text","text":" "},{"type":"text","text":"so that you can maximize how much you parse on the faster, but more complex, lower level"},{"type":"text","text":" "},{"type":"text","text":"representations and then switch to slower, but safer, higher level representations for"},{"type":"text","text":" "},{"type":"text","text":"when you need that power."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, to parse “café” as a collection of UTF8 code units you must be careful to parse"},{"type":"text","text":" "},{"type":"text","text":"both representations of “é”:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["OneOf {","  \"caf\\u{00E9}\".utf8   \/\/ LATIN SMALL LETTER E WITH ACUTE","  \"cafe\\u{0301}\".utf8  \/\/ E + COMBINING ACUTE ACCENT","}"]},{"inlineContent":[{"text":"Alternatively, you can parse the ASCII characters of “caf” as UTF8 code units, and then","type":"text"},{"text":" ","type":"text"},{"text":"switch to the higher level substring representation to parse “é” so that you don’t have","type":"text"},{"text":" ","type":"text"},{"text":"to worry about UTF8 normalization:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["Parse {","  \"caf\".utf8","","  \/\/ Parse any recognized \"é\" character, including:","  \/\/   - LATIN SMALL LETTER E WITH ACUTE (\"\\u{00E9}\")","  \/\/   - E + COMBINING ACUTE ACCENT (\"e\\u{0301}\")","  FromSubstring { \"é\" }","}"]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-1o4e0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-4m4bp","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/fromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/substringParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/toSubstring"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/Parser-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on another view."}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"schemaVersion":{"minor":2,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","interfaceLanguage":"swift"},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/fromSubstring":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/fromsubstring","title":"fromSubstring","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/fromSubstring","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"fromSubstring","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/Parser-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/Parser-Implementations","title":"Parser Implementations","url":"\/documentation\/parsing\/fromsubstring\/parser-implementations","role":"collectionGroup","abstract":[],"kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/toSubstring":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/tosubstring","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"toSubstring"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"}],"abstract":[],"type":"topic","title":"toSubstring","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/toSubstring","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/substringParser":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/substringparser","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"substringParser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SubstringParser"}],"abstract":[],"type":"topic","title":"substringParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/substringParser","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/parse(_:)":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"type":"topic","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/parse(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-5n0la":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SubstringParser","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"SubstringParser.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","title":"FromSubstring","url":"\/documentation\/parsing\/fromsubstring","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on another view."}],"kind":"symbol","navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-1o4e0":{"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-1o4e0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","title":"init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-1o4e0","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SubstringParser","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"SubstringParser.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-4m4bp":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-4m4bp","abstract":[],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-4m4bp","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":", "},{"type":"codeVoice","code":"SubstringParser"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"SubstringParser.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"}}}