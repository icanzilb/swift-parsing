{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"minor":2,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/parsing\/startswith"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"metadata":{"externalID":"s:7Parsing10StartsWithV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"roleHeading":"Structure","role":"symbol","title":"StartsWith","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"modules":[{"name":"Parsing"}]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:Sl","text":"Collection","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This parser is named after "},{"type":"codeVoice","code":"Sequence.starts(with:)"},{"type":"text","text":", and tests that the input it is parsing"},{"type":"text","text":" "},{"type":"text","text":"starts with a given subsequence by calling this method under the hood."}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", it consumes this prefix and returns ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"Hello, Blob!\"[...]","","StartsWith(\"Hello, \").parse(&input)  \/\/ ()","input                                \/\/ \"Blob!\""],"type":"codeListing"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", it fails and leaves input intact:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"Goodnight, Blob!\"[...]","try StartsWith(\"Hello, \").parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | Goodnight, Blob!","\/\/   | ^ expected \"Hello, \""],"type":"codeListing"},{"inlineContent":[{"text":"This parser returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" and ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"not","type":"text"}]},{"text":" the sequence of elements it consumes because the sequence","type":"text"},{"text":" ","type":"text"},{"text":"is already known at the time the parser is created (it is the value quite literally passed to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","type":"reference","isActive":true},{"text":").","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In many circumstances you can omit the "},{"code":"StartsWith","type":"codeVoice"},{"type":"text","text":" parser entirely and just use the collection"},{"type":"text","text":" "},{"type":"text","text":"as the parser. For example:"}],"type":"paragraph"},{"syntax":"swift","code":["var input = \"Hello, Blob!\"[...]","","try \"Hello, \".parse(&input)  \/\/ ()","input                        \/\/ \"Blob!\""],"type":"codeListing"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"title":"StartsWith","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"url":"\/documentation\/parsing\/startswith","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)","role":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"url":"\/documentation\/parsing\/startswith\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","title":"parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/parsing\/startswith\/parser-implementations","type":"topic","title":"Parser Implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/startsWith":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith","role":"symbol","abstract":[],"url":"\/documentation\/parsing\/startswith\/startswith","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"startsWith"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","title":"startsWith","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/possiblePrefix":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","role":"symbol","abstract":[],"url":"\/documentation\/parsing\/startswith\/possibleprefix","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possiblePrefix"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s13AnyCollectionV","kind":"typeIdentifier","text":"AnyCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"type":"topic","title":"possiblePrefix","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"url":"\/documentation\/parsing\/startswith\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:)","kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Input.Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:by:)":{"type":"topic","abstract":[{"text":"Initializes a parser that successfully returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":" when the initial elements of its input","type":"text"},{"text":" ","type":"text"},{"text":"are equivalent to the elements in another sequence, using the given predicate as the","type":"text"},{"text":" ","type":"text"},{"text":"equivalence test.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)","url":"\/documentation\/parsing\/startswith\/init(_:by:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"PossiblePrefix","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"PossiblePrefix","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:by:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/count":{"kind":"symbol","title":"count","type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/startswith\/count","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"}}}