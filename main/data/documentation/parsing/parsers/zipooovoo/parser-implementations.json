{"kind":"article","schemaVersion":{"minor":2,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/zipooovoo\/parser-implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO"]]},"abstract":[{"type":"text","text":"No overview available."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/Parser-Implementations"},"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/replaceError(with:)"]}],"sections":[],"metadata":{"title":"Parser Implementations","role":"collectionGroup","modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/compactMap(_:)":{"type":"topic","role":"symbol","title":"compactMap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","text":"CompactMap","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/compactMap(_:)","url":"\/documentation\/parsing\/parsers\/zipooovoo\/compactmap(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/pullback(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/zipooovoo\/pullback(_:)","abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" of a parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/pullback(_:)","role":"symbol","title":"pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO":{"type":"topic","title":"Parsers.ZipOOOVOO","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOVOO","kind":"identifier"}],"navigatorTitle":[{"text":"ZipOOOVOO","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/zipooovoo","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/filter(_:)":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/zipooovoo\/filter(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Filter","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/flatMap(_:)":{"url":"\/documentation\/parsing\/parsers\/zipooovoo\/flatmap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"FlatMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/flatMap(_:)","title":"flatMap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/map(_:)":{"title":"map(_:)","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/map(_:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/zipooovoo\/map(_:)","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/eraseToAnyParser()":{"url":"\/documentation\/parsing\/parsers\/zipooovoo\/erasetoanyparser()","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/eraseToAnyParser()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/pipe(_:)":{"url":"\/documentation\/parsing\/parsers\/zipooovoo\/pipe(_:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pipe","preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"text":"Downstream","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"pipe(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/pipe(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOVOO/replaceError(with:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOVOO\/replaceError(with:)","url":"\/documentation\/parsing\/parsers\/zipooovoo\/replaceerror(with:)","role":"symbol","type":"topic","title":"replaceError(with:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"}}}