{"metadata":{"role":"symbol","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing7ParsersO5ZipOOV","extendedModule":"Parsing","roleHeading":"Instance Method","title":"eraseToAnyParser()","modules":[{"name":"Parsing"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO\/eraseToAnyParser()","interfaceLanguage":"swift"},"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parsers\/zipoo\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","isActive":true},{"text":" wrapping this publisher.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"type erasure","type":"text"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init(_:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO\/Parser-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOO/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/zipoo\/parser-implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO\/Parser-Implementations","title":"Parser Implementations","abstract":[],"kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOO/eraseToAnyParser()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"title":"eraseToAnyParser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO\/eraseToAnyParser()","url":"\/documentation\/parsing\/parsers\/zipoo\/erasetoanyparser()","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOO":{"url":"\/documentation\/parsing\/parsers\/zipoo","kind":"symbol","title":"Parsers.ZipOO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOO","abstract":[],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOO","kind":"identifier"}],"navigatorTitle":[{"text":"ZipOO","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"url":"\/documentation\/parsing\/anyparser","title":"AnyParser","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol"}}}