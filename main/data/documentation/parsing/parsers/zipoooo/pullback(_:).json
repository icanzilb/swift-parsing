{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser that parses new input."}]}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A key path to pull parsing back along from this parser’s input to a new"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"paragraph"}],"name":"keyPath"}]},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This operator allows you to transform a parser of ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":"s into one on ","type":"text"},{"code":"NewInput","type":"codeVoice"},{"text":"s, via a","type":"text"},{"text":" ","type":"text"},{"text":"writable key path from ","type":"text"},{"code":"NewInput","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":". Intuitively you can think of this as a way of","type":"text"},{"text":" ","type":"text"},{"text":"transforming a parser on local data into one on more global data.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, the parser ","type":"text"},{"type":"codeVoice","code":"Int.parser()"},{"text":" parses ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" collections into integers,","type":"text"},{"text":" ","type":"text"},{"text":"and there’s a key path from ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":", and so we can ","type":"text"},{"type":"codeVoice","code":"pullback"},{"text":":","type":"text"}]},{"syntax":"swift","code":["var input = \"123 Hello world\"[...]","let output = try Int.parser().pullback(\\.utf8).parse(&input)  \/\/ 123","input                                                         \/\/ \" Hello world\""],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This has allowed us to parse "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"s with something that is only defined on"},{"type":"text","text":" "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO\/pullback(_:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Parsing"}],"symbolKind":"method","extendedModule":"Parsing","roleHeading":"Instance Method","title":"pullback(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"role":"symbol","externalID":"s:7Parsing6ParserPAAE8pullbackyAA7ParsersO8PullbackVy_xqd__Gs15WritableKeyPathCyqd__5InputQzGlF::SYNTHESIZED::s:7Parsing7ParsersO7ZipOOOOV"},"sections":[],"variants":[{"paths":["\/documentation\/parsing\/parsers\/zipoooo\/pullback(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" of a parser.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO\/Parser-Implementations"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOO/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/zipoooo\/parser-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO\/Parser-Implementations","type":"topic","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOO/pullback(_:)":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/zipoooo\/pullback(_:)","title":"pullback(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s15WritableKeyPathC","text":"WritableKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","text":"Pullback"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewInput"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO\/pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ZipOOOO":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ZipOOOO","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/zipoooo","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"ZipOOOO","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ZipOOOO","type":"topic","title":"Parsers.ZipOOOO","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"role":"symbol","title":"Parsers.Pullback","url":"\/documentation\/parsing\/parsers\/pullback","abstract":[{"type":"text","text":"Transforms the "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a downstream parser."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Pullback","kind":"identifier"}]}}}