{"variants":[{"paths":["\/documentation\/parsing\/fail"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Fail","modules":[{"name":"Parsing"}],"roleHeading":"Structure","externalID":"s:7Parsing4FailV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"role":"symbol","symbolKind":"struct"},"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"},"kind":"symbol","schemaVersion":{"minor":2,"major":0,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init(throwing:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/Parser-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Output","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"While not very useful on its own, this parser can be helpful when combined with other parsers or","type":"text"},{"text":" ","type":"text"},{"text":"operators.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, it can be used to conditionally causing parsing to fail when used with","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","type":"reference","isActive":true},{"text":":","type":"text"}]},{"type":"codeListing","code":["struct OddFailure: Error {}","","let evens = Int.parser().flatMap {","  if $0.isMultiple(of: 2) {","    Always($0)","  } else {","    Fail<Substring, Int>(throwing: OddFailure())","  }","}","","try evens.parse(\"42\")  \/\/ 42","","try evens.parse(\"123\")","\/\/ error: OddFailure()","\/\/  --> input:1:1-3","\/\/ 1 | 123","\/\/   | ^^^"],"syntax":"swift"}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init(throwing:)":{"title":"init(throwing:)","abstract":[{"text":"Creates a parser that throws an error when it runs.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init(throwing:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"throwing"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/fail\/init(throwing:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","title":"flatMap(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser into a new parser."}],"url":"\/documentation\/parsing\/parser\/flatmap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/parse(_:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"url":"\/documentation\/parsing\/fail\/parse(_:)","kind":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/Parser-Implementations":{"url":"\/documentation\/parsing\/fail\/parser-implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[],"title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail/init()":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a parser that throws an error when it runs."}],"url":"\/documentation\/parsing\/fail\/init()","kind":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail\/init()"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"type":"topic","title":"Fail","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"url":"\/documentation\/parsing\/fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"}}}