{"abstract":[{"type":"text","text":"A parser that parses output from an optional parser."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf"},"metadata":{"role":"symbol","title":"OneOfBuilder.OptionalOneOf","externalID":"s:7Parsing12OneOfBuilderO08OptionalbC0V","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalOneOf"}],"navigatorTitle":[{"kind":"identifier","text":"OptionalOneOf"}],"modules":[{"name":"Parsing"}],"roleHeading":"Structure"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations"],"generated":true}],"schemaVersion":{"patch":0,"minor":2,"major":0},"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/oneofbuilder\/optionaloneof"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalOneOf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You wonâ€™t typically construct this parser directly, but instead will use standard "},{"type":"codeVoice","code":"if"},{"type":"text","text":" "},{"type":"text","text":"statements in a "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","type":"reference"},{"type":"text","text":" block to automatically build optional parsers:"}]},{"code":["let whitespace = OneOf {","  if shouldParseNewlines {","    \"\\r\\n\"","    \"\\r\"","    \"\\n\"","  }","","  \" \"","  \"\\t\"","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf/Parser-Implementations":{"abstract":[],"type":"topic","role":"collectionGroup","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parser-implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf":{"abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"OptionalOneOf","kind":"identifier"}],"title":"OneOfBuilder.OptionalOneOf","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder":{"abstract":[{"text":"A custom parameter attribute that constructs a parser that attempts to run a number of parsers,","type":"text"},{"text":" ","type":"text"},{"text":"one after the other, till one succeeds with an output.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}],"title":"OneOfBuilder","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","url":"\/documentation\/parsing\/oneofbuilder","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parse(_:)","kind":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"}}}