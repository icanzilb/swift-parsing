{"abstract":[{"text":"Provides support for ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" statements in ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"text":" blocks, producing a void parser for","type":"text"},{"text":" ","type":"text"},{"text":"a given void parser.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildIf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"OptionalVoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["Parse {","  \"Hello\"","  if shouldParseComma {","    \",\"","  }","  \" \"","  Rest()","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/buildif(_:)-4fmt7"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder"]]},"sections":[],"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:7Parsing13ParserBuilderO7buildIfyAA7ParsersO12OptionalVoidVy_xGxSgAA0B0Rzyt6OutputRtzlFZ","roleHeading":"Type Method","title":"buildIf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildIf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV","text":"OptionalVoid"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"modules":[{"name":"Parsing"}]},"schemaVersion":{"minor":2,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildIf(_:)-4fmt7","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","role":"symbol","type":"topic","url":"\/documentation\/parsing\/parserbuilder","title":"ParserBuilder","navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"abstract":[{"type":"text","text":"A custom parameter attribute that constructs a parser that attempts to run a number of parsers,"},{"type":"text","text":" "},{"type":"text","text":"one after the other, and accumulates their outputs."}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}],"url":"\/documentation\/parsing","title":"Parsing","role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"url":"\/documentation\/parsing\/parser","title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/buildIf(_:)-4fmt7":{"role":"symbol","url":"\/documentation\/parsing\/parserbuilder\/buildif(_:)-4fmt7","kind":"symbol","title":"buildIf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildIf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"text":".","kind":"text"},{"text":"OptionalVoid","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO12OptionalVoidV"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Provides support for "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements in "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"text":" blocks, producing a void parser for","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a given void parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/buildIf(_:)-4fmt7"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"url":"\/documentation\/parsing\/parsers\/optionalvoid","kind":"symbol","title":"Parsers.OptionalVoid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"kind":"symbol"}}}